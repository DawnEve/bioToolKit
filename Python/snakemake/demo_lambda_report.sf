configfile: "config.yaml"

rule all:
    input:
		"report.html"

rule bwa_map:
    input:
		"data/genome.fa",
        lambda wildcards: config["samples"][wildcards.sample]
	output:
		temp("mapped_reads/{sample}.bam")
	params:
		rg="@RG\tID:{sample}\tSM:{sample}"
	log:
		"logs/bwa_mem/{sample}.log"
	threads: 8
    shell:
		"(bwa mem -R '{params.rg}' -t {threads} {input} | "
        "samtools view -Sb - > {output}) 2> {log}"

rule samtools_sort:
    input:
		"mapped_reads/{sample}.bam"
	output:
		protected("sorted_reads/{sample}.bam")
	shell:
		"samtools sort -T sorted_reads/{wildcards.sample} "
        "-O bam {input} > {output}"

rule samtools_index:
    input:
		"sorted_reads/{sample}.bam"
	output:
		"sorted_reads/{sample}.bam.bai"
	shell:
		"samtools index {input}"

rule bcftools_call:
    input:
		fa="data/genome.fa",
        bam=expand("sorted_reads/{sample}.bam", sample=config["samples"]),
        bai=expand("sorted_reads/{sample}.bam.bai", sample=config["samples"])
	output:
		"calls/all.vcf"
	shell:
		"samtools mpileup -g -f {input.fa} {input.bam} | "
        "bcftools call -mv - > {output}"

rule report:
    input:
		"calls/all.vcf"
	output:
		"report.html"
	run:
		from snakemake.utils import report
        with open(input[0]) as vcf:
			n_calls = sum(1 for l in vcf if not l.startswith("#"))
		report("""
        An example variant calling workflow
        ===================================

        Reads were mapped to the Yeast
        reference genome and variants were called jointly with
        SAMtools/BCFtools.

        This resulted in {n_calls} variants (see Table T1_).
        """, output[0], T1=input[0])

# https://mp.weixin.qq.com/s?__biz=MzI1MjU5MjMzNA==&mid=2247486637&idx=1&sn=93035d68b68a178c803f3689fb937dec