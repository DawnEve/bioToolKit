
linux常用脚本碎片

========================================
循环
----------------------------------------
1.批量化运行python命令，需要后台执行。

组装脚本:IntersectByPy.sh
for i in `cat id.txt`
do
	./myIntersect.py ${i} >myPy/${i}.bed.log 2>&1 &
done


2.编写sh脚本：
$ cat changeQt.sh
for i in `cat ../id.txt`;
do
    awk '{print $1,$1,$3,$4,$7,$6}' ${i}_intersect.bed > ${i}_intersect2.bed
done

执行：
$ chmod +x changeQt.sh
$ nohup ./changeQt.sh &



========================================
变量
----------------------------------------
1.把运行结果放到一个变量中
b=`cat test.txt | wc -l`
echo $b





========================================
awk命令
----------------------------------------
1. awk命令选择第一行标题为start的列的数据：
awk 'NR==1{for(i=1;i<=NF;i++)a[$i]=i;next}{print $a["start"]}' gwas.bed |head


========================================
输出重定向 todo
----------------------------------------
1.
Linux shell中有三种输入输出，分别为标准输入，标准输出，错误输出，分别对应0，1，2。
我们可以直接通过输出重定向>（或>>，表示追加）将某种输出重定向到其他地方，如设备，文件，比如:
1) ls > ls.log  #标准输出重定向
2) ls 2> ls.log #标准错误重定向
3) ls > /dev/null #重定向到null设备，相当于直接忽略输出

但是，有时候，我们想把标准输出以及错误输出一起重定向某个文件，这是可以通过 2>&1 实现，也可以通过两个同时重定向到某个文件
1) ls>ls.log 2>&1 //标准输出重定向到ls.log,而错误又重定向到标准输出，这两个位置不可换
2) ls 2>>ls.log 1>>ls.log或者 ls &>ls.log

ls >output.txt 

========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------





========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------


